services:
  postgres:
    image: postgres:15-alpine
    container_name: pennylane_postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Optimisations pour performances analytiques
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_WORK_MEM: 64MB
      POSTGRES_MAINTENANCE_WORK_MEM: 128MB
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "maintenance_work_mem=128MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Interface graphique optionnelle pour g√©rer PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pennylane_pgadmin
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  # Scheduler automatique pour synchronisation toutes les 2 heures
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pennylane_scheduler
    restart: always
    env_file:
      - .env
    environment:
      # Variables pour PostgreSQL local
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Variables Pennylane
      PENNYLANE_DATA_SHARING_KEY: ${PENNYLANE_DATA_SHARING_KEY}
      PENNYLANE_API_TOKEN: ${PENNYLANE_API_TOKEN}
      # Configuration Redshift
      REDSHIFT_HOST: ${REDSHIFT_HOST}
      REDSHIFT_PORT: ${REDSHIFT_PORT}
      REDSHIFT_DATABASE: ${REDSHIFT_DATABASE}
      REDSHIFT_USER: ${REDSHIFT_USER}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import os; exit(0 if os.path.exists('logs/scheduler.log') else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
